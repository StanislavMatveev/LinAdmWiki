---
### tasks file for configure_cluster

- name: Authenticating nodes
  command: "pcs host auth {{ nodes_list | join(' ') }} -u hacluster -p {{ hacluster_pass }}"

- name: Creating cluster
  command: "pcs cluster setup --force --enable --start {{ cluster_name }} {{ nodes_list | join(' ') }}"
 
- name: Turning off STONITH
  command: "pcs property set stonith-enabled=false"

- name: Turning off quorum policy (if nodes <= 2)
  command: "pcs property set no-quorum-policy=ignore"
  when: nodes_list | length <= 2

- name: Creating virtual IP resources
  command: "pcs resource create {{ item.key }} ocf:heartbeat:IPaddr2 ip={{ item.value.ip_addr }} cidr_netmask={{ item.value.netmask }} op monitor interval=30s" 
  loop: "{{ resource_dict | dict2items }}"
  when: item.value.type == "IPaddr2"

- name: Creating virtual IP default route resources
  command: "pcs resource create {{ item.key }} ocf:heartbeat:IPsrcaddr ipaddress={{ item.value.ip_addr }} cidr_netmask={{ item.value.netmask }} op monitor interval=30s"
  loop: "{{ resource_dict | dict2items }}"
  when: item.value.type == "IPsrcaddr"

- name: Creating resources for systemd services
  command: "pcs resource create {{ item.key }} systemd:{{ item.value.service_name }}"
  loop: "{{ resource_dict | dict2items }}"
  when: item.value.type == "systemd"

- name: Creating a group for resources
  command: "pcs resource group add {{ item.value.group }} {{ item.key }}"
  loop: "{{ resource_dict | dict2items }}"

- name: Restrict the last node from resource migration (if nodes > 2)
  command: "pcs constraint location regexp%.* avoids {{ nodes_list[-1] }}"
  when: nodes_list | length > 2

